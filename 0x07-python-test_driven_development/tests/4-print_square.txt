This text file is for testing the print_square function from the 4-print_square module.

First import the function.

	>>> print_square = __import__("4-print_square").print_square

Then we test that function

	>>> print_square(1)
	#

	>>> print_square(2)
	##
	##

	>>> print_square(5)
	#####
	#####
	#####
	#####
	#####

	>>> print_square(0)


	>>> print_square("size") # doctest: +ELLIPSIS
	Traceback (most recent call last):
	TypeError: ...

	>>> print_square(-1) # doctest: +ELLIPSIS
	Traceback (most recent call last):
	ValueError: ...

	>>> print_square(-5) # doctest: +ELLIPSIS
	Traceback (most recent call last):
	ValueError: ...

	>>> print_square(1.2)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(-1.2)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square([1, 2])
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square() # doctest: +ELLIPSIS
	Traceback (most recent call last):
	TypeError: ...

	>>> print_square(None) # doctest: +ELLIPSIS
	Traceback (most recent call last):
	TypeError: ...

	>>> print_square(float('nan'))
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(float('inf'))
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(3, 4) # doctest: +IGNORE_EXCEPTION_DETAIL
	Traceback (most recent call last):
	TypeError
